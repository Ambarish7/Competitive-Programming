class Solution {
public:
    string removeSubstring(string s, int k) {
        int n = s.size();
        stack<pair<char,int>> st;

        for(auto it : s){
            if(!st.empty() && st.top().first==it){
                st.top().second++;
            }
            else st.push({it,1});
            if(st.size()>=2){
                auto top1 = st.top();
                st.pop();
                auto top2 = st.top();
                st.pop();

                if( (top1.first==')' && top1.second==k) 
                   && (top2.first =='(' && top2.second>=k)){
                    top2.second-=k;
                    if(top2.second>0){
                        st.push(top2);
                    }
                }
                else{
                    st.push(top2);
                    st.push(top1);
                }
            }
        }
        string ans ="";
        while(!st.empty()){
            auto it = st.top();
            st.pop();
            int cnt = it.second;
            char ch = it.first;
            while(cnt>0){
                ans += ch;
                cnt--;
            }
        }
        reverse(ans.begin(), ans.end());
        return ans;
    }
};

