class Solution {
public:
    long long minOperations(vector<int>& nums1, vector<int>& nums2) {
        int n = nums1.size();
        int m = nums2.size();
        long long appended = LLONG_MAX;
        long long ops =0;
        bool flag = false;
        for(int i = 0 ; i<n ; i++){
            long long maxi = max(1LL*nums1[i],1LL*nums2[i]);
            long long mini = min(1LL*nums1[i],1LL*nums2[i]);
            if(mini<=nums2[m-1] && maxi>=nums2[m-1]){
                flag = true;
                appended =0;
            }
            else {
                appended = min(appended, min( abs(1LL*nums1[i]-1LL*nums2[m-1]),abs(1LL*nums2[i]-1LL*nums2[m-1])) );
            }
            ops += abs(1LL*nums1[i]-1LL*nums2[i]);
        }
        long long ans =0;
        if(flag==true){
            ans += (ops+1);
        }
        else ans += (ops+1+appended);
        return ans;
    }
};
